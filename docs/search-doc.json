[{"title":"About","type":0,"sectionRef":"#","url":"docs/","content":"Avant-garde is an improvement to the console object. It adds a lot of useful methods for things like logging JSON, displaying progress bars, playing text animations, etc.","keywords":""},{"title":"API","type":0,"sectionRef":"#","url":"docs/api","content":"","keywords":""},{"title":"animationCallback","type":1,"pageTitle":"API","url":"docs/api#animationcallback","content":"If the value returned is falsy, the animation will stop playing Type: Function "},{"title":"Parameters","type":1,"pageTitle":"API","url":"docs/api#parameters","content":"iteration number Iteration numberframe string Frame printed Returns boolean "},{"title":"animation","type":1,"pageTitle":"API","url":"docs/api#animation","content":"Play an animation asynchronously "},{"title":"Parameters","type":1,"pageTitle":"API","url":"docs/api#parameters-1","content":"frames array<string> Array of frames to playintervalTime number How many milliseconds each frame should be shown for (optional, default 1)callback animationCallback Function to run after the current frame is shown (optional, default ()=>true)clear boolean Clear the animation after it's done playing (optional, default false) Returns number "},{"title":"clear","type":1,"pageTitle":"API","url":"docs/api#clear","content":"Clear the console "},{"title":"count","type":1,"pageTitle":"API","url":"docs/api#count","content":"Log the number of times the label has been counted "},{"title":"Parameters","type":1,"pageTitle":"API","url":"docs/api#parameters-2","content":"label string (optional, default 'default') Returns number "},{"title":"cursor","type":1,"pageTitle":"API","url":"docs/api#cursor","content":"Cursor control "},{"title":"hide","type":1,"pageTitle":"API","url":"docs/api#hide","content":"Hide the cursor "},{"title":"show","type":1,"pageTitle":"API","url":"docs/api#show","content":"Show the cursor "},{"title":"isHidden","type":1,"pageTitle":"API","url":"docs/api#ishidden","content":"Check if the cursor is hidden Returns boolean "},{"title":"toggle","type":1,"pageTitle":"API","url":"docs/api#toggle","content":"Toggle the cursor "},{"title":"debug","type":1,"pageTitle":"API","url":"docs/api#debug","content":"Print a debugging message to the console "},{"title":"Parameters","type":1,"pageTitle":"API","url":"docs/api#parameters-3","content":"content ...string The content to be printed Returns string "},{"title":"error","type":1,"pageTitle":"API","url":"docs/api#error","content":"Print an error to the console "},{"title":"Parameters","type":1,"pageTitle":"API","url":"docs/api#parameters-4","content":"content ...string The content to be shown as the error Returns string "},{"title":"json","type":1,"pageTitle":"API","url":"docs/api#json","content":"Pretty-print, highlight, and log some JSON to the console "},{"title":"Parameters","type":1,"pageTitle":"API","url":"docs/api#parameters-5","content":"json any Content to convert to JSON and logindentation number How many spaces should be used for indentation (optional, default 2) Returns string "},{"title":"log","type":1,"pageTitle":"API","url":"docs/api#log","content":"Log a string to the console "},{"title":"Parameters","type":1,"pageTitle":"API","url":"docs/api#parameters-6","content":"content ...string The content to log to the console Returns string "},{"title":"newline","type":1,"pageTitle":"API","url":"docs/api#newline","content":"Semantic way of printing a newline character to stdout "},{"title":"Parameters","type":1,"pageTitle":"API","url":"docs/api#parameters-7","content":"repeat number How many new lines should be printed (optional, default 1) "},{"title":"progress","type":1,"pageTitle":"API","url":"docs/api#progress","content":"Print a progress bar "},{"title":"Parameters","type":1,"pageTitle":"API","url":"docs/api#parameters-8","content":"percentage number Progress bar percentage (optional, default 100)character string Character used in progress bar (optional, default '\\u2588')columns number (optional, default process.stdout.columns) Returns string "},{"title":"timestamp","type":1,"pageTitle":"API","url":"docs/api#timestamp","content":"Log to the console with a timestamp "},{"title":"Parameters","type":1,"pageTitle":"API","url":"docs/api#parameters-9","content":"on boolean Truthy or falsy value that determines if the timestamp will be logged Returns boolean "},{"title":"Installation","type":0,"sectionRef":"#","url":"docs/installation","content":"Make sure that you have both NodeJS and NPM (or another package manager) installedRun the command npm i avant-garde (or npm i avant-garde --save if you have NPM 4 or below)Once it completes installing, you can move on to the next step","keywords":""},{"title":"Community","type":0,"sectionRef":"#","url":"docs/community","content":"GitHub - https://github.com/shreyasm-dev/avant-garde NPM - https://www.npmjs.com/package/avant-garde Have a question or a bug report? Open an issue or start a discussion on our GitHub repository.","keywords":""},{"title":"Usage","type":0,"sectionRef":"#","url":"docs/usage","content":"You need to use ES6's import to load the module and use it. Add the following line of code to import it: import console from 'avant-garde'; Copy You can now use Avant-garde. Add the following code: console.json({ a: 1, b: 2, c: 3, }); Copy Run the code. You should see the object printed in the console with formatting and highlighting. You can now head over to the API reference or the examples.","keywords":""},{"title":"Examples","type":0,"sectionRef":"#","url":"docs/examples","content":"","keywords":""},{"title":"console.animatio()","type":1,"pageTitle":"Examples","url":"docs/examples#consoleanimatio","content":"console.animation( // Play an animation [ // Animation frames '-', '--', '---', '----', '-----', '------', '-------', '--------', '---------', '----------', '-----------', ], 100, // Every frame should be shown for 100 ms // This will be called after every frame is shown (iteration) => iteration !== 10, // If a falsy value is returned, the animation will stop ); Copy "},{"title":"console.cursor","type":1,"pageTitle":"Examples","url":"docs/examples#consolecursor","content":"console.cursor.hide()# console.cursor.hide(); // Hide the cursor Copy console.cursor.show()# // Recommended, but unnecessary since the cursor will automatically be restored when the process exits (or crashes) console.cursor.show(); // Show the cursor Copy console.cursor.isHidden()# console.log(console.cursor.isHidden()); // false console.cursor.hide(); console.log(console.cursor.isHidden()); // true Copy console.cursor.toggle()# console.log(console.cursor.isHidden()); // false console.cursor.toggle(); // Toggle the cursor console.log(console.cursor.isHidden()); // true Copy "},{"title":"console.debug()","type":1,"pageTitle":"Examples","url":"docs/examples#consoledebug","content":"// Same as regular console.debug except for the fact that the function returns what it logs console.debug('Something', 'Something else'); Copy "},{"title":"console.error()","type":1,"pageTitle":"Examples","url":"docs/examples#consoleerror","content":"// Same as regular console.error except for the fact that the function returns what it logs console.debug('Error: ', 'Something went wrong'); Copy "},{"title":"console.json()","type":1,"pageTitle":"Examples","url":"docs/examples#consolejson","content":"console.json( // Pretty-print and syntax highlight some JSON { a: 1, b: 2, c: 3, }, 2, // Indentation size ); Copy "},{"title":"console.log()","type":1,"pageTitle":"Examples","url":"docs/examples#consolelog","content":"// Same as regular console.log except for the fact that the function returns what it logs console.log('Hello,', 'World!'); // Output: Hello, World! Copy "},{"title":"console.newline()","type":1,"pageTitle":"Examples","url":"docs/examples#consolenewline","content":"// Semantic way of printing a new line console.newline(); Copy "},{"title":"console.progress()","type":1,"pageTitle":"Examples","url":"docs/examples#consoleprogress","content":"console.progress( 35, // Percentage '=', // Character used in progress bar 100, // Number of columns the progress bar should take at 100% (default is full width of the terminal) ); Copy "},{"title":"console.timestamp()","type":1,"pageTitle":"Examples","url":"docs/examples#consoletimestamp","content":"console.timestamp(true); console.log('Timestamp'); console.timestamp(false); console.log('No timestamp'); Copy "}]